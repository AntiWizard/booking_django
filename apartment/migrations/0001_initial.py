# Generated by Django 4.1.2 on 2022-12-22 07:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utlis.validation_zip_code


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reservations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('residence_status', models.CharField(choices=[('FREE', 'Free'), ('SPACE', 'Space'), ('FULL', 'Full'), ('CANCELLED', 'Cancelled')], default='FREE', max_length=15)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('unit_count', models.PositiveSmallIntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('capacity', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room', to='apartment.apartment')),
                ('price_per_night', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.price')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult_count', models.PositiveSmallIntegerField(default=0)),
                ('children_count', models.PositiveSmallIntegerField(default=0)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('check_in_date', models.DateTimeField()),
                ('check_out_date', models.DateTimeField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservation', to='apartment.apartmentroom')),
                ('total_cost', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='reservations.price')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate', to='apartment.apartment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must not consist of space and requires country code. eg : 989210000000', regex='^[1-9][0-9]{8,14}$')])),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('zip_code', models.BigIntegerField(blank=True, null=True, validators=[utlis.validation_zip_code.validation_zip_code])),
                ('location', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='reservations.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='apartment',
            name='address',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='apartment_address', to='apartment.apartmentaddress'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s', to='reservations.residencetype'),
        ),
        migrations.AddConstraint(
            model_name='apartmentroom',
            constraint=models.UniqueConstraint(fields=('apartment', 'number'), name='unique_apartment_number_seat'),
        ),
        migrations.AddConstraint(
            model_name='apartmentreservation',
            constraint=models.UniqueConstraint(fields=('user', 'room'), name='unique_user_apartment_room'),
        ),
        migrations.AddConstraint(
            model_name='apartmentrating',
            constraint=models.UniqueConstraint(fields=('apartment', 'user', 'rate'), name='unique_apartment_user_rate'),
        ),
        migrations.AddConstraint(
            model_name='apartment',
            constraint=models.UniqueConstraint(condition=models.Q(('residence_status__in', ['FREE', 'SPACE', 'FULL'])), fields=('name', 'residence_status'), name='unique_apartment_name_residence_status'),
        ),
    ]
